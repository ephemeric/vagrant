require "yaml"
settings = YAML.load_file "settings.yaml"

IP_SECTIONS = settings["network"]["control_ip"].match(/^([0-9.]+\.)([^.]+)$/)
# First 3 octets including the trailing dot:
IP_NW = IP_SECTIONS.captures[0]
# Last octet excluding all dots:
IP_START = Integer(IP_SECTIONS.captures[1])
NUM_WORKER_NODES = settings["nodes"]["workers"]["count"]

Vagrant.configure("2") do |config|
  config.vm.provision "shell", env: { "IP_NW" => IP_NW, "IP_START" => IP_START, "NUM_WORKER_NODES" => NUM_WORKER_NODES }, inline: <<-SHELL
      echo "$IP_NW$((IP_START)) master-node" >> /etc/hosts
      for i in `seq 1 ${NUM_WORKER_NODES}`; do
        echo "$IP_NW$((IP_START+i)) worker-node0${i}" >> /etc/hosts
      done
  SHELL

  config.vm.box = settings["software"]["box"]

  config.vm.define "master-node" do |master|
    master.vm.box = BOX
    master.vm.box_version = VERSION
    master.vm.hostname = "master-node"
    master.vm.network :private_network, \
    :ip => settings["network"]["control_ip"], \
    :libvirt__network_name => "ephemeric", \
    :libvirt__dhcp_enabled => false, \
    :libvirt__always_destroy => true, \
    :libvirt__guest_ipv6 => false, \
    :libvirt__forward_mode => "veryisolated", \
    :libvirt__host_ip => "192.168.235.1"
    if settings["shared_folders"]
      settings["shared_folders"].each do |shared_folder|
        master.vm.synced_folder shared_folder["host_path"], shared_folder["vm_path"]
      end
    end
    master.vm.provider "libvirt" do |lv|
        lv.cpus = settings["nodes"]["control"]["cpu"]
        lv.memory = settings["nodes"]["control"]["memory"]
    end

    master.vm.provision "shell", env: {"CALICO_VERSION" => settings["software"]["calico"], "CONTROL_IP" => settings["network"]["control_ip"], "POD_CIDR" => settings["network"]["pod_cidr"], "SERVICE_CIDR" => settings["network"]["service_cidr"], "DNS_SERVERS" => settings["network"]["dns_servers"].join(" "), "ENVIRONMENT" => settings["environment"], "KUBERNETES_VERSION" => settings["software"]["kubernetes"], "OS" => settings["software"]["os"]}, inline: <<-SHELL
      cd /vagrant/
      ./scripts/install_setup.sh master-node >/dev/null
      ./scripts/k8-common.sh >/dev/null
      ./scripts/k8-master.sh >/dev/null
    SHELL
  end

  (1..NUM_WORKER_NODES).each do |i|
    config.vm.define "worker-node0#{i}" do |node|
      node.vm.box = BOX
      node.vm.box_version = VERSION
      node.vm.hostname = "worker-node0#{i}"
      node.vm.network :private_network, \
      :ip => IP_NW + "#{IP_START + i}", \
      :libvirt__network_name => "ephemeric", \
      :libvirt__dhcp_enabled => false, \
      :libvirt__always_destroy => true, \
      :libvirt__guest_ipv6 => false, \
      :libvirt__forward_mode => "veryisolated", \
      :libvirt__host_ip => "192.168.235.1"
      if settings["shared_folders"]
        settings["shared_folders"].each do |shared_folder|
          node.vm.synced_folder shared_folder["host_path"], shared_folder["vm_path"]
        end
      end
      node.vm.provider "libvirt" do |lv|
          lv.cpus = settings["nodes"]["workers"]["cpu"]
          lv.memory = settings["nodes"]["workers"]["memory"]
      end

      node.vm.provision "shell", env: {"DNS_SERVERS" => settings["network"]["dns_servers"].join(" "), "ENVIRONMENT" => settings["environment"], "KUBERNETES_VERSION" => settings["software"]["kubernetes"], "OS" => settings["software"]["os"]}, inline: <<-SHELL
        cd /vagrant/
        ./scripts/install_setup.sh "worker-node0#{i}" >/dev/null
        ./scripts/k8-common.sh >/dev/null
        ./scripts/k8-node.sh >/dev/null
      SHELL
      # Only install the dashboard after provisioning the last worker (and when enabled).
      if i == NUM_WORKER_NODES and settings["software"]["dashboard"] and settings["software"]["dashboard"] != ""
        node.vm.provision "shell", path: "upload/scripts/k8-dashboard.sh"
      end
    end

  end
end
